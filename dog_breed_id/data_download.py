# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_data_download.ipynb.

# %% auto 0
__all__ = ['download_file']

# %% ../nbs/01_data_download.ipynb 3
import requests
import os
from tqdm.auto import tqdm
from pathlib import Path
import math

def download_file(url, filename=None, dirname=None):
    """Downloads a file at `url`
    url - URl of file to download
    filename[optional]- filename to save as
    dirname[optional] - directory in which to save filename
    """
    if filename is None:
        filename = url.split(os.sep)[-1]
    if dirname is not None:
        Path(dirname).mkdir(parents=True, exist_ok=True)
        filename = dirname + os.sep + filename
    
    if Path(filename).exists():
        print(f"{filename} already exists. Skipping")
        return
    # Get size of the file
    CHUNK_SIZE = 16384
    headers = requests.head(url).headers
    size = None
    if headers:
        size = headers.get('content-length', None)
        if size is not None:
            size = float(size)/CHUNK_SIZE
            size = math.ceil(size)
    with requests.get(url, stream=True) as r:
        r.raise_for_status()
        with open(filename, 'wb') as f:
            for chunk in tqdm(r.iter_content(chunk_size=16384), total=size):
                f.write(chunk)
