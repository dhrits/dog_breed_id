# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/dog_breed_id',
                'doc_host': 'https://dhrits.github.io',
                'git_url': 'https://github.com/dhrits/dog_breed_id',
                'lib_path': 'dog_breed_id'},
  'syms': { 'dog_breed_id.benchmark': { 'dog_breed_id.benchmark.DogBreedClassificationDataset': ( 'benchmark.html#dogbreedclassificationdataset',
                                                                                                  'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.DogBreedClassificationDataset.__getitem__': ( 'benchmark.html#dogbreedclassificationdataset.__getitem__',
                                                                                                              'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.DogBreedClassificationDataset.__init__': ( 'benchmark.html#dogbreedclassificationdataset.__init__',
                                                                                                           'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.DogBreedClassificationDataset.__len__': ( 'benchmark.html#dogbreedclassificationdataset.__len__',
                                                                                                          'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.RegularizerCB': ( 'benchmark.html#regularizercb',
                                                                                  'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.RegularizerCB.__init__': ( 'benchmark.html#regularizercb.__init__',
                                                                                           'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.RegularizerCB.after_loss': ( 'benchmark.html#regularizercb.after_loss',
                                                                                             'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.freeze_weights': ( 'benchmark.html#freeze_weights',
                                                                                   'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.get_class_weights': ( 'benchmark.html#get_class_weights',
                                                                                      'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.get_classification_accuracy': ( 'benchmark.html#get_classification_accuracy',
                                                                                                'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.get_classification_accuracy_ensembled': ( 'benchmark.html#get_classification_accuracy_ensembled',
                                                                                                          'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.get_data_subsets': ( 'benchmark.html#get_data_subsets',
                                                                                     'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.get_id_mappings': ( 'benchmark.html#get_id_mappings',
                                                                                    'dog_breed_id/benchmark.py'),
                                        'dog_breed_id.benchmark.init_model': ('benchmark.html#init_model', 'dog_breed_id/benchmark.py')},
            'dog_breed_id.coco_eval': {},
            'dog_breed_id.coco_utils': {},
            'dog_breed_id.core': { 'dog_breed_id.core.bar': ('core.html#bar', 'dog_breed_id/core.py'),
                                   'dog_breed_id.core.foo': ('core.html#foo', 'dog_breed_id/core.py'),
                                   'dog_breed_id.core.foo2': ('core.html#foo2', 'dog_breed_id/core.py')},
            'dog_breed_id.data_download': { 'dog_breed_id.data_download.download_file': ( 'data_download.html#download_file',
                                                                                          'dog_breed_id/data_download.py')},
            'dog_breed_id.data_preprocessing': { 'dog_breed_id.data_preprocessing.annotated_image': ( 'data_preprocessing.html#annotated_image',
                                                                                                      'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.bbox_to_coco': ( 'data_preprocessing.html#bbox_to_coco',
                                                                                                   'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.coco_to_bbox': ( 'data_preprocessing.html#coco_to_bbox',
                                                                                                   'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_annotations_json': ( 'data_preprocessing.html#get_annotations_json',
                                                                                                           'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_annotations_path_from': ( 'data_preprocessing.html#get_annotations_path_from',
                                                                                                                'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_bboxes': ( 'data_preprocessing.html#get_bboxes',
                                                                                                 'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_breedname': ( 'data_preprocessing.html#get_breedname',
                                                                                                    'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_cat_id_mappings': ( 'data_preprocessing.html#get_cat_id_mappings',
                                                                                                          'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_cats_json': ( 'data_preprocessing.html#get_cats_json',
                                                                                                    'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_format_from': ( 'data_preprocessing.html#get_format_from',
                                                                                                      'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_image_id_mappings': ( 'data_preprocessing.html#get_image_id_mappings',
                                                                                                            'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_images_json': ( 'data_preprocessing.html#get_images_json',
                                                                                                      'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.get_resized_bboxes': ( 'data_preprocessing.html#get_resized_bboxes',
                                                                                                         'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.plot_random_images': ( 'data_preprocessing.html#plot_random_images',
                                                                                                         'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.read_csv_with_array_columns': ( 'data_preprocessing.html#read_csv_with_array_columns',
                                                                                                                  'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.resize_bboxes': ( 'data_preprocessing.html#resize_bboxes',
                                                                                                    'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.save_resized': ( 'data_preprocessing.html#save_resized',
                                                                                                   'dog_breed_id/data_preprocessing.py'),
                                                 'dog_breed_id.data_preprocessing.to_coco': ( 'data_preprocessing.html#to_coco',
                                                                                              'dog_breed_id/data_preprocessing.py')},
            'dog_breed_id.engine': {},
            'dog_breed_id.model_training': { 'dog_breed_id.model_training.RegularizerCB': ( 'training.html#regularizercb',
                                                                                            'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.RegularizerCB.__init__': ( 'training.html#regularizercb.__init__',
                                                                                                     'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.RegularizerCB.after_loss': ( 'training.html#regularizercb.after_loss',
                                                                                                       'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.get_classification_accuracy': ( 'training.html#get_classification_accuracy',
                                                                                                          'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.get_classification_accuracy_ensembled': ( 'training.html#get_classification_accuracy_ensembled',
                                                                                                                    'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.get_subsets': ( 'training.html#get_subsets',
                                                                                          'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.seed_basic': ( 'training.html#seed_basic',
                                                                                         'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.seed_everything': ( 'training.html#seed_everything',
                                                                                              'dog_breed_id/model_training.py'),
                                             'dog_breed_id.model_training.seed_torch': ( 'training.html#seed_torch',
                                                                                         'dog_breed_id/model_training.py')},
            'dog_breed_id.research': { 'dog_breed_id.research.DogsSubsetDataset': ( 'research.html#dogssubsetdataset',
                                                                                    'dog_breed_id/research.py'),
                                       'dog_breed_id.research.DogsSubsetDataset.__getitem__': ( 'research.html#dogssubsetdataset.__getitem__',
                                                                                                'dog_breed_id/research.py'),
                                       'dog_breed_id.research.DogsSubsetDataset.__init__': ( 'research.html#dogssubsetdataset.__init__',
                                                                                             'dog_breed_id/research.py'),
                                       'dog_breed_id.research.DogsSubsetDataset.__len__': ( 'research.html#dogssubsetdataset.__len__',
                                                                                            'dog_breed_id/research.py'),
                                       'dog_breed_id.research.DogsSubsetDataset._id2labels': ( 'research.html#dogssubsetdataset._id2labels',
                                                                                               'dog_breed_id/research.py'),
                                       'dog_breed_id.research.DogsSubsetDataset._label2id': ( 'research.html#dogssubsetdataset._label2id',
                                                                                              'dog_breed_id/research.py'),
                                       'dog_breed_id.research.collate_fn': ('research.html#collate_fn', 'dog_breed_id/research.py'),
                                       'dog_breed_id.research.evaluate_fasterrcnn_classification_accuracy': ( 'research.html#evaluate_fasterrcnn_classification_accuracy',
                                                                                                              'dog_breed_id/research.py'),
                                       'dog_breed_id.research.get_classes_from_frame': ( 'research.html#get_classes_from_frame',
                                                                                         'dog_breed_id/research.py'),
                                       'dog_breed_id.research.get_fasterrcnn_model': ( 'research.html#get_fasterrcnn_model',
                                                                                       'dog_breed_id/research.py'),
                                       'dog_breed_id.research.plot_evaluate_fasterrcnn_predictions': ( 'research.html#plot_evaluate_fasterrcnn_predictions',
                                                                                                       'dog_breed_id/research.py'),
                                       'dog_breed_id.research.train_faster_rcnn': ( 'research.html#train_faster_rcnn',
                                                                                    'dog_breed_id/research.py')},
            'dog_breed_id.transforms': {},
            'dog_breed_id.utils': {}}}
